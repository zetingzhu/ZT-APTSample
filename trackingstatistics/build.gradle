apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 25
        targetSdkVersion 33

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "boolean", "DEBUG_LOG", DEBUG_LOG
        buildConfigField "String", "appSKey", appSKey
        buildConfigField "String", "appIvParameter", appIvParameter
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.jjshome.mobile.datastatistics'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'io.reactivex:rxjava:1.2.1'
    implementation 'io.reactivex:rxandroid:1.2.1'
    compileOnly 'com.alibaba:fastjson:1.1.72.android'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.google.android.material:material:1.9.0'
}

// larson注释，下面这段代码负责上传打包好的库，如果要上传到自己的服务器需要成公司maven仓库
/*
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}
afterEvaluate { project ->

    uploadArchives {
        repositories {
            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID
                pom.version = VERSION_NAME
                repository(url: "http://172.16.5.251:8081/nexus/content/repositories/com.jjshome.mobile") {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
            }
        }
    }
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }
    artifacts {
        archives androidSourcesJar
    }
}
*/
